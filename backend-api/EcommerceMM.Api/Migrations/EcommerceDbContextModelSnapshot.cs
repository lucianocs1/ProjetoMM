// <auto-generated />
using System;
using EcommerceMM.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcommerceMM.Api.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    partial class EcommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("EcommerceMM.Api.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 176, DateTimeKind.Utc).AddTicks(8269),
                            Email = "admin@ecommercemm.com",
                            IsActive = true,
                            LastLogin = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "$2a$11$1HLr5CmUzq/BQyK.1By2YeAC5k5sDSr4NCN5Kd63qaEqGaZK7nVMG",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("EcommerceMM.Api.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("Slug")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 69, DateTimeKind.Utc).AddTicks(8353),
                            Description = "Roupas femininas",
                            IsActive = true,
                            Name = "Roupas",
                            Slug = "roupas"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 69, DateTimeKind.Utc).AddTicks(8358),
                            Description = "Blusas e tops",
                            IsActive = true,
                            Name = "Blusas",
                            Slug = "blusas"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 69, DateTimeKind.Utc).AddTicks(8359),
                            Description = "Bolsas e acessórios",
                            IsActive = true,
                            Name = "Bolsas",
                            Slug = "bolsas"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 69, DateTimeKind.Utc).AddTicks(8360),
                            Description = "Calçados femininos",
                            IsActive = true,
                            Name = "Sapatos",
                            Slug = "sapatos"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 69, DateTimeKind.Utc).AddTicks(8361),
                            Description = "Saias e calças",
                            IsActive = true,
                            Name = "Saias e Calças",
                            Slug = "saia-calca"
                        });
                });

            modelBuilder.Entity("EcommerceMM.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsNew")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("OriginalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Sizes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("[]");

                    b.Property<string>("SizesList")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("IsActive");

                    b.HasIndex("Name");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 176, DateTimeKind.Utc).AddTicks(8442),
                            Description = "Vestido midi com estampa floral delicada, perfeito para o verão",
                            Image = "https://images.unsplash.com/photo-1515372039744-b8f02a3ae446?w=300&h=300&fit=crop&crop=center",
                            IsActive = true,
                            IsFeatured = false,
                            IsNew = true,
                            Name = "Vestido Floral Midi",
                            OriginalPrice = 119.90m,
                            Price = 89.90m,
                            Sizes = "[\"P\", \"M\", \"G\", \"GG\"]",
                            SizesList = "[\"P\",\"M\",\"G\",\"GG\"]",
                            UpdatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 176, DateTimeKind.Utc).AddTicks(8442)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 176, DateTimeKind.Utc).AddTicks(8445),
                            Description = "Blusa básica em algodão, confortável para o dia a dia",
                            Image = "https://images.unsplash.com/photo-1564557287817-3785e38ec1f5?w=300&h=300&fit=crop&crop=center",
                            IsActive = true,
                            IsFeatured = false,
                            IsNew = false,
                            Name = "Blusa Básica Cotton",
                            Price = 49.90m,
                            Sizes = "[\"P\", \"M\", \"G\"]",
                            SizesList = "[\"P\",\"M\",\"G\"]",
                            UpdatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 176, DateTimeKind.Utc).AddTicks(8445)
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 176, DateTimeKind.Utc).AddTicks(8447),
                            Description = "Bolsa tote espaçosa em couro sintético, ideal para o dia a dia",
                            Image = "https://images.unsplash.com/photo-1553062407-98eeb64c6a62?w=300&h=300&fit=crop&crop=center",
                            IsActive = true,
                            IsFeatured = false,
                            IsNew = true,
                            Name = "Bolsa Tote Grande",
                            OriginalPrice = 199.90m,
                            Price = 159.90m,
                            Sizes = "[\"Único\"]",
                            SizesList = "[\"\\u00DAnico\"]",
                            UpdatedAt = new DateTime(2025, 8, 6, 12, 48, 58, 176, DateTimeKind.Utc).AddTicks(8448)
                        });
                });

            modelBuilder.Entity("EcommerceMM.Api.Models.Product", b =>
                {
                    b.HasOne("EcommerceMM.Api.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EcommerceMM.Api.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
